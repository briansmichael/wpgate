CREATE TABLE IF NOT EXISTS user_roles(
    id integer primary key generated by default as identity,
    role_name varchar(15),
    description varchar(100)
);

CREATE TABLE IF NOT EXISTS actions(
    id integer primary key generated by default as identity,
    action_name varchar(15),
    description varchar(100)
);

CREATE TABLE IF NOT EXISTS property(
    id integer primary key generated by default as identity,
    house_number integer NOT NULL,
    home_owner_name varchar(100)
);

CREATE TABLE IF NOT EXISTS users(
    id integer primary key generated by default as identity,
    phone_number bigint,
    user_role_id integer NOT NULL,
    property_id integer NOT NULL,
    foreign key (property_id) references property(id),
    foreign key (user_role_id) references user_roles(id)
);

CREATE TABLE IF NOT EXISTS history(
    id uuid default gen_random_uuid(),
    property_id integer,
    user_id integer,
    event_date varchar(15) NOT NULL,
    event_time timestamp default current_timestamp,
    gate_msg_tn bigint,
    gate_msg_text varchar(1000),
    action_id integer NOT NULL,
    primary key (id, event_date),
    foreign key (property_id) references property(id),
    foreign key (user_id) references users(id),
    foreign key (action_id) references actions(id)
) partition by list(event_date);

CREATE TABLE IF NOT EXISTS inflight(
    id uuid default gen_random_uuid(),
    guest_tn bigint NOT NULL,
    property_id integer NOT NULL,
    request_time timestamp default current_timestamp,
    primary key (id),
    foreign key (property_id) references property(id)
);

INSERT INTO user_roles (role_name, description) VALUES ('BANNED', 'Individuals explicitely denied access');
INSERT INTO user_roles (role_name, description) VALUES ('GUEST', 'Any non resident of the community, who is not banned');
INSERT INTO user_roles (role_name, description) VALUES ('RESIDENT', 'Any resident of the community, including owners, family members, long-term guests, etc.');
INSERT INTO user_roles (role_name, description) VALUES ('OWNER', 'Designated owner of a property.  Will receive msgs upon access request to their property');
INSERT INTO user_roles (role_name, description) VALUES ('ADMIN', 'System administrator');

INSERT INTO actions(action_name, description) VALUES ('GATE_OPENED', 'Gate open command sent to gate controller');
INSERT INTO actions(action_name, description) VALUES ('HELP', 'Help response msg returned to requestor');
INSERT INTO actions(action_name, description) VALUES ('ACCESS_LIST', 'Depending upon role, respond with property access configuration');
INSERT INTO actions(action_name, description) VALUES ('ACCESS_HISTORY', 'Depending upon role, respond with property access history');
INSERT INTO actions(action_name, description) VALUES ('USER_ADDED', 'User added to a property');
INSERT INTO actions(action_name, description) VALUES ('USER_REMOVED', 'User removed from a property');
INSERT INTO actions(action_name, description) VALUES ('USER_BANNED', 'User banned from a property');
INSERT INTO actions(action_name, description) VALUES ('GUEST', 'Guest message');